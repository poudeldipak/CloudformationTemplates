{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "amazon_autorecovery.template - AutoRecovery EC2 Instance. **WARNING** You will be billed for the AWS resources used if you create a stack from this template.",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Parameters": [
            "ARInstanceName",
            "Ebs2MountPoint",
            "Ebs2VolumeSize",
            "Iops",
            "PlacementTenancy",
            "SnapshotId",
            "EbsVolumeSize",
            "PatchingGroupTag",
            "EBSOptimized",
            "DetailedMonitoring",
            "EbsVolumeType",
            "DisableApiTermination",
            "EncryptEBSVolume"
          ],
          "Label": {
            "default": "EC2 Instances Configuration"
          }
        },
        {
          "Parameters": [
            "AppSubnet",
            "ARInstanceSecurityGroupList"
          ],
          "Label": {
            "default": "Network Configuration"
          }
        }
      ],
    }
  },
  "Parameters": {
    "InternalRecordName": {
      "Default": "",
      "Type": "String",
      "Description": "Record Name for the new Resource Record in the Internal Hosted Zone"
    },
    "ARInstanceSecurityGroupList": {
      "Type": "List<AWS::EC2::SecurityGroup::Id>",
      "Description": "A list that contains the EC2 security groups to assign to the Amazon EC2 instance"
    },
    "ARInstanceName": {
      "Type": "String",
      "ConstraintDescription": "Must follow normal syntax conventions.",
      "Description": "EC2 Server Instance Name"
    },
    "Environment": {
      "Default": "Development",
      "Type": "String",
      "Description": "Application environment for which this network is being created. e.g. Development/Production.",
      "AllowedValues": [
        "Development",
        "Integration",
        "PreProduction",
        "Production",
        "Staging",
        "Test"
      ]
    },
    "CWLogRetention": {
      "Default": "30",
      "Type": "String",
      "ConstraintDescription": "Must be a valid integer.",
      "Description": "The number of days to retain Cloudwatch Logs for this Autoscaling Group.",
      "AllowedValues": [
        "1",
        "3",
        "5",
        "7",
        "14",
        "30",
        "60",
        "90",
        "120",
        "150",
        "180",
        "365",
        "400",
        "545",
        "731",
        "1827",
        "3653"
      ]
    },

    "Ebs2VolumeSize": {
      "Default": "",
      "Type": "String",
      "Description": "Select Second EBS Volume Size in GB."
    },
    "ImageId": {
      "Default": "",
      "Type": "String",
      "Description": "The image ID to be used to build the EC2 Instance. OPTIONAL"
    },
    "EBSOptimized": {
      "Default": "False",
      "Type": "String",
      "Description": "Use EBS Optimized.",
      "AllowedValues": [
        "False",
        "True"
      ]
    },
    "AppSubnet": {
      "Type": "AWS::EC2::Subnet::Id",
      "Description": "Subnets for Application"
    },
    "InternalZoneName": {
      "Default": "",
      "Type": "String",
      "Description": "TLD for Internal Hosted Zone"
    },
    "KeyName": {
      "ConstraintDescription": "Must be the name of an existing EC2 KeyPair.",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances."
    },
    "EIPAllocationId": {
      "Default": "",
      "Type": "String",
      "Description": "The AllocationId of the EIP you want to associate with the instance (optional)."
    },
    "CwCpuHighPeriod": {
      "AllowedPattern": "([0-9]+)",
      "Default": "60",
      "Type": "String",
      "Description": "Time the specified statistic is applied. Must be in seconds that is also a multiple of 60.",
      "ConstraintDescription": "Must be a valid integer."
    },
    "SnapshotId": {
      "Default": "",
      "Type": "String",
      "Description": "The Snapshot ID to be used to build the 2nd EBS volume. OPTIONAL"
    },
    "BackupsEnabled": {
      "Default": "False",
      "Type": "String",
      "Description": "Determines whether EBS Snapshot backups should be enabled.",
      "AllowedValues": [
        "False",
        "True"
      ]
    },
    "InstanceType": {
      "Default": "t2.micro",
      "Type": "String",
      "ConstraintDescription": "Must be a valid EC2 instance type. Default is t2.micro",
      "Description": "Select instance type",
      "AllowedValues": [
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "t2.xlarge",
        "t2.2xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "m4.16xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "r4.large",
        "r4.xlarge",
        "r4.2xlarge",
        "r4.4xlarge",
        "r4.8xlarge",
        "r4.16xlarge",
        "x1.16xlarge",
        "x1.32xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "i3.large",
        "i3.xlarge",
        "i3.2xlarge",
        "i3.4xlarge",
        "i3.8xlarge",
        "i3.16xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "g3.4xlarge",
        "g3.8xlarge",
        "g3.16xlarge",
        "p2.xlarge",
        "p2.8xlarge",
        "p2.16xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "f1.2xlarge",
        "f1.16xlarge"
      ]
    },
    "EbsVolumeSize": {
      "Default": "60",
      "Type": "String",
      "Description": "Select EBS Volume Size in GB."
    },
    "PlacementTenancy": {
      "Default": "default",
      "Type": "String",
      "Description": "The placement tenancy for EC2 devices",
      "AllowedValues": [
        "dedicated",
        "default",
        "host"
      ]
    },
    "InstanceRoleManagedPolicyArns": {
      "Default": "",
      "Type": "String",
      "Description": "A comma delimited list of IAM policy ARNs for the InstanceRole IAM role.  IAM ARNs can be found within the Policies section of the AWS IAM console."
    },
    "Ebs2MountPoint": {
      "Default": "",
      "Type": "String",
      "Description": "Filesystem Mount point for 2nd EBS volume.  Omit to prevent changes to 2nd volume."
    },
    "PatchingGroupTag": {
      "Default": "",
      "Type": "String",
      "Description": "Group ID to be used by System Manager for Patching (OPTIONAL)"
    },
    "CreationPolicyTimeOut": {
      "Default": "20M",
      "ConstraintDescription": "#H#M#S where each # is the number of hours or minutes or seconds",
      "Type": "String",
      "Description": "Time to wait for the number of signals for the creation policy. H/M/S Hours/Minutes/Seconds"
    },
    "Iops": {
      "Default": "0",
      "Type": "Number",
      "Description": "Iops value required for use with io1 EBS volumes. This value should be 3 times the EBS volume size"
    },
    "DetailedMonitoring": {
      "Default": "True",
      "Type": "String",
      "Description": "Enable Detailed Monitoring.",
      "AllowedValues": [
        "False",
        "True"
      ]
    },
    "CwCpuHighEvaluations": {
      "AllowedPattern": "([0-9]+)",
      "Default": "15",
      "Type": "String",
      "Description": "The number of periods over which data is compared to the specified threshold.",
      "ConstraintDescription": "Must be a valid integer."
    },
    "EbsVolumeType": {
      "Default": "gp2",
      "Type": "String",
      "Description": "Select EBS Volume Type.",
      "AllowedValues": [
        "io1",
        "standard",
        "gp2"
      ]
    },
    "DisableApiTermination": {
      "Default": "False",
      "Type": "String",
      "Description": "Specifies whether the instance can be terminated through the API.",
      "AllowedValues": [
        "False",
        "True"
      ]
    },
    "InternalZoneId": {
      "Default": "",
      "Type": "String",
      "Description": "The Route53 Internal Hosted Zone ID"
    },
    "EncryptEBSVolume": {
      "Default": "False",
      "Type": "String",
      "Description": "Specifies whether to encrypt the EBS volume.",
      "AllowedValues": [
        "False",
        "True"
      ]
    }
  },
  "Conditions": {
    "is2ndEBSVolume": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "Ebs2VolumeSize"
            },
            ""
          ]
        }
      ]
    },
    "isEBSEncrypted": {
      "Fn::Equals": [
        {
          "Ref": "EncryptEBSVolume"
        },
        "True"
      ]
    },
    "AttachEIP": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "EIPAllocationId"
            },
            ""
          ]
        }
      ]
    },
    "InstanceRolePoliciesSet": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "InstanceRoleManagedPolicyArns"
            },
            ""
          ]
        }
      ]
    },
    "isInternalHostedZoneIdProvided": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "InternalZoneId"
            },
            ""
          ]
        }
      ]
    },
    "IopsEnabled": {
      "Fn::Equals": [
        {
          "Ref": "EbsVolumeType"
        },
        "io1"
      ]
    },
    "DetailedMonitoring": {
      "Fn::Equals": [
        {
          "Ref": "DetailedMonitoring"
        },
        "True"
      ]
    },
    "isSnapshotId": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "SnapshotId"
            },
            ""
          ]
        }
      ]
    },
    "isImageId": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "ImageId"
            },
            ""
          ]
        }
      ]
    }
  },
  "Mappings": {
    "AWSRegionArch2AMI": {
      "us-east-1": {
        "64": "ami-4fffc834"
      },
      "us-west-1": {
        "64": "ami-3a674d5a"
      },
      "ap-northeast-2": {
        "64": "ami-8663bae8"
      },
      "ap-northeast-1": {
        "64": "ami-4af5022c"
      },
      "sa-east-1": {
        "64": "ami-d27203be"
      },
      "ap-southeast-1": {
        "64": "ami-fdb8229e"
      },
      "ca-central-1": {
        "64": "ami-5ac17f3e"
      },
      "ap-southeast-2": {
        "64": "ami-30041c53"
      },
      "us-west-2": {
        "64": "ami-aa5ebdd2"
      },
      "us-east-2": {
        "64": "ami-ea87a78f"
      },
      "ap-south-1": {
        "64": "ami-d7abd1b8"
      },
      "eu-central-1": {
        "64": "ami-657bd20a"
      },
      "eu-west-1": {
        "64": "ami-ebd02392"
      },
      "eu-west-2": {
        "64": "ami-489f8e2c"
      }
    }
  },
  "Resources": {
    "EIP": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "InstanceId": {
          "Ref": "ARInstance"
        },
        "AllocationId": {
          "Ref": "EIPAllocationId"
        }
      },
      "Condition": "AttachEIP"
    },
    "InternalRecordSet": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Comment": {
          "Fn::Join": [
            "",
            [
              "Internal Record Set for ",
              {
                "Ref": "InternalRecordName"
              }
            ]
          ]
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "InternalRecordName"
              },
              ".",
              {
                "Ref": "InternalZoneName"
              },
              "."
            ]
          ]
        },
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "ARInstance",
              "PrivateIp"
            ]
          }
        ],
        "TTL": "300",
        "HostedZoneId": {
          "Ref": "InternalZoneId"
        },
        "Type": "A"
      },
      "Condition": "isInternalHostedZoneIdProvided"
    },
    "InstanceRoleInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "InstanceRole"
          }
        ]
      }
    },
    "InstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "ManagedPolicyArns": {
          "Fn::Split": [
            ",",
            {
              "Fn::Join": [
                ",",
                [
                  "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM",
                  {
                    "Fn::If": [
                      "InstanceRolePoliciesSet",
                      {
                        "Ref": "InstanceRoleManagedPolicyArns"
                      },
                      {
                        "Ref": "AWS::NoValue"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        },
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ]
        }
      }
    },
    "ARInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": {
          "Ref": "DisableApiTermination"
        },
        "Monitoring": {
          "Ref": "DetailedMonitoring"
        },
        "Tags": [
          {
            "Key": "Backup",
            "Value": {
              "Ref": "BackupsEnabled"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Ref": "ARInstanceName"
            }
          },
          {
            "Key": "PatchingGroup",
            "Value": {
              "Ref": "PatchingGroupTag"
            }
          },
          {
            "Key": "ServiceProvider",
            "Value": "Genese"
          }
        ],
        "Tenancy": {
          "Ref": "PlacementTenancy"
        },
        "ImageId": {
          "Fn::If": [
            "isImageId",
            {
              "Ref": "ImageId"
            },
            {
              "Fn::FindInMap": [
                "AWSRegionArch2AMI",
                {
                  "Ref": "AWS::Region"
                },
                "64"
              ]
            }
          ]
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "Iops": {
                "Fn::If": [
                  "IopsEnabled",
                  {
                    "Ref": "Iops"
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              },
              "DeleteOnTermination": "true",
              "VolumeType": {
                "Ref": "EbsVolumeType"
              },
              "VolumeSize": {
                "Ref": "EbsVolumeSize"
              }
            }
          }
        ],
        "EbsOptimized": {
          "Ref": "EBSOptimized"
        },
        "SecurityGroupIds": {
          "Ref": "ARInstanceSecurityGroupList"
        },
        "SubnetId": {
          "Ref": "AppSubnet"
        },
        "IamInstanceProfile": {
          "Ref": "InstanceRoleInstanceProfile"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        }
      }
    },
    "InstanceRolePolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "InstanceRole",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "cloudformation:Describe*"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "cloudwatch:PutMetricData",
                "cloudwatch:GetMetricStatistics",
                "cloudwatch:ListMetrics"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "ec2:DescribeTags"
              ],
              "Resource": "*",
              "Effect": "Allow"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "InstanceRole"
          }
        ]
      }
    },
    "ApplicationErrorLogs": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": {
          "Ref": "CWLogRetention"
        }
      }
    },
    "Ebs2Volume": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": {
          "Fn::GetAtt": [
            "ARInstance",
            "AvailabilityZone"
          ]
        },
        "Encrypted": {
          "Fn::If": [
            "isEBSEncrypted",
            "true",
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "VolumeType": {
          "Ref": "EbsVolumeType"
        },
        "Iops": {
          "Fn::If": [
            "IopsEnabled",
            {
              "Ref": "Iops"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "SnapshotId": {
          "Fn::If": [
            "isSnapshotId",
            {
              "Ref": "SnapshotId"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "Size": {
          "Ref": "Ebs2VolumeSize"
        }
      },
      "Condition": "is2ndEBSVolume"
    },
    "ApplicationAccessLogs": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": {
          "Ref": "CWLogRetention"
        }
      }
    },
    "CloudFormationLogs": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": {
          "Ref": "CWLogRetention"
        }
      }
    },
    "StatusCheckFailedInstanceAlarmReboot": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "EvaluationPeriods": "5",
        "Dimensions": [
          {
            "Name": "InstanceId",
            "Value": {
              "Ref": "ARInstance"
            }
          }
        ],
        "AlarmActions": [
          {
            "Fn::Join": [
              ":",
              [
                "arn",
                "aws",
                "swf",
                {
                  "Ref": "AWS::Region"
                },
                {
                  "Ref": "AWS::AccountId"
                },
                "action/actions/AWS_EC2.InstanceId.Reboot/1.0"
              ]
            ]
          }
        ],
        "AlarmDescription": "Status checks have failed, rebooting system.",
        "Namespace": "AWS/EC2",
        "Period": "60",
        "ComparisonOperator": "GreaterThanThreshold",
        "Statistic": "Minimum",
        "Threshold": "0",
        "Unit": "Count",
        "MetricName": "StatusCheckFailed_Instance"
      }
    },
    "Ebs2VolumeAttachment": {
      "Type": "AWS::EC2::VolumeAttachment",
      "Properties": {
        "InstanceId": {
          "Ref": "ARInstance"
        },
        "Device": "/dev/xvdb",
        "VolumeId": {
          "Ref": "Ebs2Volume"
        }
      },
      "Condition": "is2ndEBSVolume"
    },
    "StatusCheckFailedSystemAlarmRecover": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "EvaluationPeriods": "2",
        "Dimensions": [
          {
            "Name": "InstanceId",
            "Value": {
              "Ref": "ARInstance"
            }
          }
        ],
        "AlarmActions": [
          {
            "Fn::Join": [
              ":",
              [
                "arn",
                "aws",
                "automate",
                {
                  "Ref": "AWS::Region"
                },
                "ec2",
                "recover"
              ]
            ]
          }
        ],
        "AlarmDescription": "Status checks have failed for system, recovering instance",
        "Namespace": "AWS/EC2",
        "Period": "60",
        "ComparisonOperator": "GreaterThanThreshold",
        "Statistic": "Minimum",
        "Threshold": "0",
        "Unit": "Count",
        "MetricName": "StatusCheckFailed_System"
      }
    }
  }
}
